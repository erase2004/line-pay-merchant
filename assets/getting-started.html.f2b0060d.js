import{r as t,o as l,c,a as n,b as a,w as p,F as i,e as s,d as u}from"./app.a5cc4239.js";import{_ as k}from"./plugin-vue_export-helper.21dcd24c.js";const d={},b=n("h1",{id:"getting-started",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#getting-started","aria-hidden":"true"},"#"),s(" Getting Started")],-1),m=n("h2",{id:"create-line-pay-sandbox-account",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#create-line-pay-sandbox-account","aria-hidden":"true"},"#"),s(" Create LINE Pay Sandbox Account")],-1),h=n("p",null,"You may need Sandbox account to develop and test LINE Pay application. If you already have a Sandbox account, feel free to skip this step.",-1),y=n("p",null,"Channel ID and channel secret key are two important items used to authenticate the identity of merchants. Using production channel ID and channel secret key in development environment is inconvenient and dangerous. Follow the steps below to create your Sandbox account and find your channel ID and channel secret key.",-1),_=s("Apply for a Sandbox account in "),g={href:"https://pay.line.me/tw/developers/techsupport/sandbox/creation?locale=en_US",target:"_blank",rel:"noopener noreferrer"},f=s("Sandbox Creation menu"),v=s(". Merchant ID and password will be sent to the email address provided in the application form."),w=n("li",null,[n("p",null,"Find your merchant ID and password in the email.")],-1),q=s("Log in to "),x={href:"https://pay.line.me/tw/center/test/main?locale=en_US",target:"_blank",rel:"noopener noreferrer"},I=s("Merchant Center"),S=s(" with merchant ID and password."),U=s("Find your channel ID and channel secret key at "),C={href:"https://pay.line.me/tw/center/payment/interlockKey?locale=zh_TW",target:"_blank",rel:"noopener noreferrer"},L=s("Manage Link Key Page"),N=s(" by following the "),P={href:"https://pay.line.me/tw/developers/techsupport/sandbox/channel?locale=en_US",target:"_blank",rel:"noopener noreferrer"},j=s("Channel ID & SK guide"),G=s("."),D=n("p",null,"You may now test the LINE Pay Online API with your new channel ID and channel secret key.",-1),B=s("For more information, please visit the official "),E={href:"https://pay.line.me/tw/developers/techsupport/sandbox/testflow?locale=en_US",target:"_blank",rel:"noopener noreferrer"},V=s("Test Flow Page"),R=s("."),Y=n("h2",{id:"installation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#installation","aria-hidden":"true"},"#"),s(" Installation")],-1),A=s("You can install the package from "),M={href:"https://www.npmjs.com/package/line-pay-merchant",target:"_blank",rel:"noopener noreferrer"},F=s("NPM"),K=s(" or "),W={href:"https://yarnpkg.com/package/line-pay-merchant",target:"_blank",rel:"noopener noreferrer"},X=s("YARN"),Z=s(" with the following commands:"),T=n("div",{class:"language-bash ext-sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"npm"),s(),n("span",{class:"token function"},"install"),s(` line-pay-merchant
`)])])],-1),J=n("div",{class:"language-bash ext-sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"yarn"),s(),n("span",{class:"token function"},"add"),s(` line-pay-merchant
`)])])],-1),Q=u(`<p>Or build from source:</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/enylin/line-pay-merchant
<span class="token builtin class-name">cd</span> line-pay-merchant
<span class="token function">npm</span> <span class="token function">install</span>
<span class="token function">npm</span> run build
</code></pre></div><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><h3 id="line-pay-request-api" tabindex="-1"><a class="header-anchor" href="#line-pay-request-api" aria-hidden="true">#</a> LINE Pay Request API</h3><p>Import <code>createLinePayClient</code> function from <code>line-pay-merchant</code>.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createLinePayClient <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;line-pay-merchant&#39;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Create client with channel ID and channel secret key.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> linePayClient <span class="token operator">=</span> <span class="token function">createLinePayClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">channelId</span><span class="token operator">:</span> <span class="token string">&#39;1479113123&#39;</span><span class="token punctuation">,</span> <span class="token comment">// your channel ID</span>
  <span class="token literal-property property">channelSecretKey</span><span class="token operator">:</span> <span class="token string">&#39;1f021e50f28fb3f40b7a9c5e758b0a19&#39;</span><span class="token punctuation">,</span> <span class="token comment">// your channel secret key</span>
  <span class="token literal-property property">env</span><span class="token operator">:</span> <span class="token string">&#39;development&#39;</span> <span class="token comment">// env can be &#39;development&#39; or &#39;production&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Use the client created to call LINE Pay request API.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> linePayClient<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">amount</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
        <span class="token literal-property property">currency</span><span class="token operator">:</span> <span class="token string">&#39;TWD&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">orderId</span><span class="token operator">:</span> <span class="token string">&#39;20211209003&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">packages</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;c99abc79-3b29-4f40-8851-bc618ca57856&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">amount</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
            <span class="token literal-property property">products</span><span class="token operator">:</span> <span class="token punctuation">[</span>
              <span class="token punctuation">{</span>
                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Product Name&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">quantity</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token number">500</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">]</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token literal-property property">redirectUrls</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">confirmUrl</span><span class="token operator">:</span> <span class="token string">&#39;https://myshop.com/confirmUrl&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">cancelUrl</span><span class="token operator">:</span> <span class="token string">&#39;https://myshop.com/cancelUrl&#39;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>Response:</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;body&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;returnCode&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0000&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;returnMessage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Success.&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;info&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;paymentUrl&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;web&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://sandbox-web-pay.line.me/web/payment/wait?transactionReserveId=eVBISG5rQ09QL2JBVmJsdGdGN3RiUlBLaU0vMUtKWGEvVzhZS3o5NnBvSUlqZXdLdXk3Wlh0RXY2a0o3ZHp6Yw&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;app&quot;</span><span class="token operator">:</span> <span class="token string">&quot;line://pay/payment/eVBISG5rQ09QL2JBVmJsdGdGN3RiUlBLaU0vMUtKWGEvVzhZS3o5NnBvSUlqZXdLdXk3Wlh0RXY2a0o3ZHp6Yw&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;transactionId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2021121600698709710&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;paymentAccessToken&quot;</span><span class="token operator">:</span> <span class="token string">&quot;656097936065&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;comments&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,12);function z(H,O){const e=t("ExternalLinkIcon"),o=t("CodeGroupItem"),r=t("CodeGroup");return l(),c(i,null,[b,m,h,y,n("ol",null,[n("li",null,[n("p",null,[_,n("a",g,[f,a(e)]),v])]),w,n("li",null,[n("p",null,[q,n("a",x,[I,a(e)]),S])]),n("li",null,[n("p",null,[U,n("a",C,[L,a(e)]),N,n("a",P,[j,a(e)]),G])])]),D,n("p",null,[B,n("a",E,[V,a(e)]),R]),Y,n("p",null,[A,n("a",M,[F,a(e)]),K,n("a",W,[X,a(e)]),Z]),a(r,null,{default:p(()=>[a(o,{title:"NPM"},{default:p(()=>[T]),_:1}),a(o,{title:"YARN"},{default:p(()=>[J]),_:1})]),_:1}),Q],64)}var sn=k(d,[["render",z]]);export{sn as default};
